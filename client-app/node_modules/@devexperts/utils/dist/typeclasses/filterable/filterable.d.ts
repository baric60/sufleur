import { HKT, Kind, Kind2, URIS, URIS2 } from 'fp-ts/lib/HKT';
import { Filterable, Filterable1, Filterable2 } from 'fp-ts/lib/Filterable';
import { Decoder } from 'io-ts';
export declare function decode<F extends URIS2>(F: Filterable2<F>): <A>(codec: Decoder<unknown, A>) => <E>(fa: Kind2<F, E, unknown>) => Kind2<F, E, A>;
export declare function decode<F extends URIS>(F: Filterable1<F>): <A>(codec: Decoder<unknown, A>) => (fa: Kind<F, unknown>) => Kind<F, A>;
export declare function decode<F>(F: Filterable<F>): <A>(decoder: Decoder<unknown, A>) => (fa: HKT<F, unknown>) => HKT<F, A>;
