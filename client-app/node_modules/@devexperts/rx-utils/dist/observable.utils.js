"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var Observable_1 = require("fp-ts-rxjs/lib/Observable");
var rxjs_1 = require("rxjs");
var pipeable_1 = require("fp-ts/lib/pipeable");
var operators_1 = require("rxjs/operators");
var internal_compatibility_1 = require("rxjs/internal-compatibility");
var Task_1 = require("fp-ts/lib/Task");
exports.instanceObservable = tslib_1.__assign(tslib_1.__assign({}, Observable_1.observable), { createAdapter: function () {
        var s = new rxjs_1.Subject();
        var next = function (a) { return s.next(a); };
        return [next, s.asObservable()];
    }, fromEvent: function (target, event) {
        return pipeable_1.pipe(new rxjs_1.Observable(function (subscriber) {
            var handler = function (e) { return subscriber.next(e); };
            target.addEventListener(event, handler);
            return function () { return target.removeEventListener(event, handler); };
        }), operators_1.share());
    }, fromObservable: function (observable) {
        return new rxjs_1.Observable(function (subscriber) {
            return observable.subscribe({
                end: function () {
                    subscriber.complete();
                },
                next: function (e) {
                    subscriber.next(e);
                },
            });
        });
    }, fromTask: function (fa) { return internal_compatibility_1.fromPromise(fa()); }, fromIO: function (fa) { return internal_compatibility_1.fromPromise(Task_1.task.fromIO(fa)()); }, subscribe: function (fa, observer) {
        return fa.subscribe({
            next: function (e) {
                observer.next(e);
            },
            complete: function () {
                observer.end();
            },
        });
    } });
var zero = exports.instanceObservable.zero;
exports.observable = tslib_1.__assign(tslib_1.__assign(tslib_1.__assign({}, exports.instanceObservable), pipeable_1.pipeable(exports.instanceObservable)), { zero: zero });
//# sourceMappingURL=observable.utils.js.map