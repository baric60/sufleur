import { RemoteData } from '@devexperts/remote-data-ts';
import { AjaxError, AjaxRequest } from 'rxjs/ajax';
import { Observable } from 'rxjs';
export declare enum RequestMethod {
    Get = "GET",
    Post = "POST",
    Put = "PUT",
    Delete = "DELETE"
}
/**
 * @deprecated
 */
export declare class ApiClient {
    private readonly baseHref;
    private readonly headers?;
    static create(baseHref: string, extraHeaders?: object): ApiClient;
    readonly RequestMethod: typeof RequestMethod;
    private constructor();
    private createURL;
    private readonly errorSubj$;
    readonly error$: Observable<AjaxError>;
    readonly request: <Response_1 = never>(request: AjaxRequest) => Observable<RemoteData<AjaxError, Response_1>>;
    readonly get: <Response_1 = never>(url: string, query?: {} | undefined) => Observable<RemoteData<AjaxError, Response_1>>;
    readonly post: <Response_1 = never>(url: string, body: {}) => Observable<RemoteData<AjaxError, Response_1>>;
    readonly remove: <Response_1 = never>(url: string, query?: {}) => Observable<RemoteData<AjaxError, Response_1>>;
    readonly put: <Response_1 = never>(url: string, body?: {} | undefined) => Observable<RemoteData<AjaxError, Response_1>>;
}
