"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var rxjs_1 = require("rxjs");
var Apply_1 = require("fp-ts/lib/Apply");
/**
 * @deprecated Use `Sink` from `sink2.utils.ts`
 */
exports.URI = 'Sink';
/**
 * @deprecated Use `Sink` from `sink2.utils.ts`
 */
var Sink = /** @class */ (function () {
    function Sink(value, sink$) {
        if (sink$ === void 0) { sink$ = rxjs_1.EMPTY; }
        this.value = value;
        this.sink$ = sink$;
    }
    Sink.prototype.map = function (f) {
        return new Sink(f(this.value), this.sink$);
    };
    Sink.prototype.ap = function (fab) {
        return new Sink(fab.value(this.value), rxjs_1.merge(fab.sink$, this.sink$));
    };
    Sink.prototype.chain = function (f) {
        var fb = f(this.value);
        return new Sink(fb.value, rxjs_1.merge(fb.sink$, this.sink$));
    };
    return Sink;
}());
exports.Sink = Sink;
/**
 * @deprecated use `sink.getSemigroup` from `sink2.utils.ts`
 */
exports.getSemigroup = function (S) { return ({
    concat: function (x, y) { return new Sink(S.concat(x.value, y.value), rxjs_1.merge(x.sink$, y.sink$)); },
}); };
/**
 * @deprecated use `sink.getMonoid` from `sink2.utils.ts`
 */
exports.getMonoid = function (M) { return (tslib_1.__assign(tslib_1.__assign({}, exports.getSemigroup(M)), { empty: new Sink(M.empty, rxjs_1.EMPTY) })); };
var of = function (value) { return new Sink(value); };
var map = function (fa, f) { return fa.map(f); };
var ap = function (fab, fa) { return fa.ap(fab); };
var chain = function (fa, f) { return fa.chain(f); };
/**
 * @deprecated Use `instanceSink` from `sink2.utils.ts`
 */
exports.sink = {
    URI: exports.URI,
    of: of,
    map: map,
    ap: ap,
    chain: chain,
};
/**
 * @deprecated Use `sink.sequenceT` from `sink2.utils.ts`
 */
exports.sequenceTSink = Apply_1.sequenceT(exports.sink);
//# sourceMappingURL=sink.utils.js.map